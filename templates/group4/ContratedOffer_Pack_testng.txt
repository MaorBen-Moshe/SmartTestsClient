<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Minimal Acceptance Testing">

<!--    <parameter name='coreapi.rest.utils.RestDriver.RestRequest.headers' value='x-telepresence-intercept-id: ronir' />-->
	<parameter name="test.repository.folderPath" value="./com/amdocs/core/oc/group4/repository/,/com/amdocs/ordercapture/repository/"/>
<!--    <parameter name="test.repository.folderPath" value="./src/main/resources/com/amdocs/core/oc/group4/repository/"/> -->
    <parameter name="custom.report.visibility.onlyGroupsToIncludeOnDashboard" value="Fuji,Everest,Olympus,Fuji-ReplaceMS,Fuji-ContractedOffer" />
    <!-- Retry functionality -->
    <parameter name="retryConfig.enabled" value="true" /> <!-- 20210527 yuriki removing retry for poc -->
    <parameter name="retryConfig.retryCondition.exceptionMessage" value="All" />
    <parameter name="retryConfig.retryCondition.exceptionMessage.maxRetryCount" value="3" />
    <parameter name="retryConfig.retryCondition.exceptionMessage.sleepTime" value="3000" />
    <parameter name="retryConfig.totalRetryCount" value="100" />
    <parameter name="retryConfig.retryCondition.0.enabled" value="true" />
    <parameter name="retryConfig.retryCondition.0.responseCode" value="500" />
    <parameter name="retryConfig.retryCondition.0.sleepTime" value="2000" />
    <parameter name="retryConfig.retryCondition.0.maxRetryCount" value="1" />
    <parameter name="retryConfig.retryCondition.1.enabled" value="true" />
    <parameter name="retryConfig.retryCondition.1.responseCode" value="502" />
    <parameter name="retryConfig.retryCondition.1.sleepTime" value="2000" />
    <parameter name="retryConfig.retryCondition.1.maxRetryCount" value="1" />
    <parameter name="retryConfig.retryCondition.2.enabled" value="true" />
    <parameter name="retryConfig.retryCondition.2.responseCode" value="422" />
    <parameter name="retryConfig.retryCondition.2.sleepTime" value="2000" />
    <parameter name="retryConfig.retryCondition.2.maxRetryCount" value="1" />
    <parameter name="retryConfig.retryCondition.3.enabled" value="true" />
    <parameter name="retryConfig.retryCondition.3.responseCode" value="404" />
    <parameter name="retryConfig.retryCondition.3.sleepTime" value="2000" />
    <parameter name="retryConfig.retryCondition.3.maxRetryCount" value="1" />

    <parameter name="defaultApplication" value="oc" />

    <parameter name="a3s.token" value="Basic YTNzRGVwbG95ZXI6QTNzRGVwbG95ZXIh" />
    <parameter name="oc.authentication" value="keycloak" />

    <parameter name="oc.authentication.keycloak.class" value="com.amdocs.authorizationutilities.keycloak.actions.AuthorizationKeycloak" />
    <parameter name="oc.authentication.a3s.class" value="com.amdocs.authorizationutilities.a3s.actions.AuthorizationA3S" />
    <parameter name="care.isSimulator" value="true"/>
    <!-- Red Brick -->
    <parameter name="redbrick.isEnabled" value="true" />

    <!-- Light Tracer -->
    <parameter name="light.tracer.isEnabled" value="true" />
     <parameter name='coreapi.rest.utils.RestDriver.RestRequest.headers' value='x-api-logger:payload' />
    <parameter name="custom.report.visibility.failure" value="true" />
    <parameter name="custom.report.visibility.success" value="true" />
    <parameter name="custom.report.visibility.skipped" value="true" />

    <parameter name="openshift.oc.baseUri" value="OPENSHIFT_OC_BASEURI"/>
    <parameter name="openshift.oc.project.name" value="OPENSHIFT_OC_PROJECT_NAME"/>
    <parameter name="openshift.oc.project.token" value="OPENSHIFT_OC_PROJECT_TOKEN"/>

    <parameter name="care.isSimulator" value="true"/>

<!--    <parameter name="openshift.oc.baseUri" value="https://api.ilocpde456.ocpd.corp.amdocs.com:6443"/>-->
<!--    <parameter name="openshift.oc.project.name" value="oc-cd-master-coc-include-ed"/>-->
<!--    <parameter name="openshift.oc.project.token" value="Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImFoNVZGZkNTZ2ZJM2Y4V3RPa3hzU2ZRT3ZCRlY5QUJNUWRrMFI5bHhvRzQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJvYy1jZC1tYXN0ZXItY29jLWluY2x1ZGUtZWQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZml0LXNhLXRva2VuLTVmejdiIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImZpdC1zYSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjdiMDA1MjQzLTRkZDYtNGMzNy04ZGQ1LWE0NmM4MzI3YWY5NiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpvYy1jZC1tYXN0ZXItY29jLWluY2x1ZGUtZWQ6Zml0LXNhIn0.SmXfHofb9Vk91yIzYfgTc6UKtKsbYskcA9lYkkUiP0-nyTxr848WEYrNN1-NFncOGy-GL3uFideBgBdIJ2hBcDpBzZyc8F71hT5C7QWHVYZ41iCZ3wyIvyTDakZiE7Ye3RXHtyWoJ52iq2JTRm6biHlW5PMYZrvmu_-r_xCVB5xiB33tisH8b9BInGZLH0MvX-uEZVcSdp_6O2P3sQZBWvyEqavcN1PYvhdKrFeX6x2q06U0WHF9AeVjDKxqHOwmB70r8dAvl0MpCGGd8iUQJcQtgyXAkNmaO4bqm-vrNorwGXNGpdA9JoJt5H6fDsAy70DVo-4gZBCOyEYhoQFfMN9UxlI_MLM8V1xjm8ocQkL7HWT4vcKd0pAYggSdE9Kf6SYhkRfD1PwQ0oRS-fXNJhjMGNFT5yJvszd5yCmd4eB55JnXZKAInVKxfJug6ZlbIi45AUmMqS8h5CnRZvm5SeNrAN03PmeaQ__7920cHzAIzYm7UZhN-jtgh7r3ori0yXVlg5ohB87DgNfg-1j4aKl0StIrk3tKcGE-WCyoKuJvImSWUxX9lb8dOj_6sq6C2sf3arD0rIqCKEKQdQUTsPM4yCc-VtIvY0yirST2oq0JH63aGxwFzxz6E3xI2ruGMbAW_NR5iywMEVYcH-HRz1mST-scXgRt5IqaTHPZWzo" />-->

<!--    <parameter name="openshift.oc.baseUri" value="https://api.ilocpde456.ocpd.corp.amdocs.com:6443"/>-->
<!--    <parameter name="openshift.oc.project.name" value="oc-cd-group4-coc-include-ed"/>-->
<!--    <parameter name="openshift.oc.project.token" value="Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImFoNVZGZkNTZ2ZJM2Y4V3RPa3hzU2ZRT3ZCRlY5QUJNUWRrMFI5bHhvRzQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJvYy1jZC1ncm91cDQtY29jLWluY2x1ZGUtZWQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZml0LXNhLXRva2VuLTI2d3hqIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImZpdC1zYSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImMyNWMxNTJkLTQxMDgtNGQxMy1hMDY1LWU1YTU2ZWQwYTY5NyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpvYy1jZC1ncm91cDQtY29jLWluY2x1ZGUtZWQ6Zml0LXNhIn0.jI3Sw2vzQ86oLAghNVOF4afgLTb_uMCWJxvjkS3jkkW87JkDe_TxkoyK2kqNUoB6W5mSo1cBVXhdJ6gajF-hrf-TIbWIx1YPRVW9hfwBoIF1tSuX-BSGnKLPyVCAhzxchlTlpvR6wsATPpLtOvSKv8Cb-GukXHopZh5e_raIZ75oK50TBxywvRGTsrtyAnn-0NCKe9TiaPYkACt-gDxRWe99BiHMAwkniZsWu3J98xcoO779CJ0ER5rO5waXLRKm5PK7vhnRWAG8b1pDvNCMCHBvPO_75TScEXsAVSaBMNOioYhMsR03mbmSJLpKi7toYBTptcRkN_va_t-9uJEttUpY7Ap1V1XANij5LTsbHileyuUjADy8rsfx6ROyX1swoVYQmhy1I50JUStnYyWqh9SiP_VbsqyChhxWDedQaAtoj7pVx7Kfy5GpCaXpKJUDSeBBH8oQVFKZnWlEUbCsxus-gB0Ez_DCEl85q8GMz1ixJ16GvJWvmsJm9P3QkLhCsv47ltuRwEC2Ktjpk9do_9gbf-kDLKGmWbu03Usdiy2ZdX14fQh11RW_a70j7sxFz_gszLSaPfqJrvCYWNqvstA2X6-liQlTUAYLDDpUO42g_lgOE8Ny-kHF4UMTLxHVWPsRLRFzNi7LO1uVTdceQ2-iKXd4WjrOv7z1BSAGB80"/>-->

<!--    <parameter name="openshift.oc.baseUri" value="https://api.ilocpde513.ocpd.corp.amdocs.com:6443"/>-->
<!--    <parameter name="openshift.oc.project.name" value="eu-oc-fuji-london67421"/>-->
<!--    <parameter name="openshift.oc.project.token" value="Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjRRQjkyQmlJMDNXX1JWYks4WVcxVlpvLU5kR0VlSzlIY1NWMGliLVJxelUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJldS1vYy1mdWppLWxvbmRvbjY3NDIxIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImZpdC1zYS10b2tlbi01endycSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJmaXQtc2EiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJhNWQyZjZjOC01Nzc1LTQzYzctODc4ZC0wMmY0MmYzOTQ1ZjQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZXUtb2MtZnVqaS1sb25kb242NzQyMTpmaXQtc2EifQ.QchkNZxCApJktwwIg6no7oJ5QCUV5F8TMJE4pAyz0Bt6OkcPZwr7yPU_s-RXfhgpzWHIEpocBWvxBiOENXOzSJres3dQ8ndgWwF1_hrIycYTSPzep7lOlS16PRv5iNPW8xtbla0JoOHGeYcc2zh6kWmPadoUfI17SrOTfR3iREhJ9AAkz0WtFpKxYFdGHLxlfS7W15awwhQRfahWE-wEOP8eWXEVk4rNSw4bScSVphYZsDETcm0brziAxVgqhOmSUJALnIQQyQJPYH6IIqxzPG4WD1aHK3Le1iR_Cx8QqX35HjS2C5PfS1nGcGL-yHMel5gyoxlo7LhlGSSfwwtTMul_Guxi-T_wbn2gHaYiHukzdVB3Q6p1wF2G4YQ0P8JQlC04g84CODUiF481_zbkBitC0rjwOE7H2q2j-O2f0rqxisupQedOY8RQ9jjIJMfDO39ecVzzBjAUzwOq0YEnieSQs-5xc0mMOpYtemgUaYGiODWuopNQ18-tupa7WOZPFqU0X4qS8CPSSQiRZuRqnExveXYxXnHidhoQSpV3uj4Us3-eK9BXUDn9spun5hp3it1zp8R1DBW6RWd6fccdAxmWWDrI3bQpA8OfpnAdPbj8FjEvodtOTQWVvUSzxlBffngs2QfDVoaE-ZTHlAxW90pj6WA08T3734ecd6WHkuk" />-->


    <parameter name="custom.report.visibility.indexedclasses" value="true" />
    <parameter name="custom.report.lightvis.url" value="http://ilde63831.eaas.amdocs.com:6001"></parameter>

    <!-- Rerun configuration -->
    <parameter name="custom.report.rerun.generateFile" value="true" />
    <parameter name="custom.report.rerun.threadCount" value="4" />
    <!-- All requests will run through APIGW route-->
    <parameter name="oc.service.baseUri" value="{{oc.service.amd-apigw-stack-service.baseUri}}" />
    <parameter name="oc.service.oc-wiremock-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <!-- Wiremock configurations -->
    <parameter name="oc.service.oc-wiremock-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="appointment.service.appointment-bridge-service.baseUri" value="{{oc.service.appointment-bridge-service.baseUri}}" />
    <parameter name="care.service.geographicaddressaccessor-service.baseUri" value="{{oc.service.geographicaddressaccessor-service.baseUri}}" />
    <parameter name="srm.service.resource-management-service.baseUri" value="{{oc.service.resource-management-service.baseUri}}" />
    <parameter name="servicequalificationhooks.service.servicequalification-servicequalificationhooks-service.baseUri" value="{{oc.service.servicequalification-servicequalificationhooks-service.baseUri}}" />
    <parameter name="productstockbridge.service.stock-productstockbridge-service.baseUri" value="{{oc.service.stock-productstockbridge-service.baseUri}}" />
    <parameter name="care.service.customeraccessor-domainrouter-service.baseUri" value="{{oc.service.customeraccessor-domainrouter-service.baseUri}}" />
    <parameter name="care.service.account-billingaccount-service.baseUri" value="{{oc.service.account-billingaccount-service.baseUri}}" />
    <parameter name="care.service.place-place-service.baseUri" value="{{oc.service.place-place-service.baseUri}}" />
    <parameter name="care.service.customer-management-domainrouter-service.baseUri" value="{{oc.service.customer-management-domainrouter-service.baseUri}}" />
    <parameter name="care.service.account-relatedaccount-service.baseUri" value="{{oc.service.account-relatedaccount-service.baseUri}}" />
    <parameter name="care.service.party-relatedparty-service.baseUri" value="{{oc.service.party-relatedparty-service.baseUri}}" />
    <parameter name="care.service.geographicaddress-geographicaddress-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" /><!-- geographicaddress-geographicaddress-service -->
    <parameter name="care.service.geographicaddress-geographicaddress-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="rtb.service.paymentmanagement-payment-service.baseUri" value="{{oc.service.paymentmanagement-payment-service.baseUri}}" />
    <parameter name="care.service.party-organization-service.baseUri" value="{{oc.service.party-organization-service.baseUri}}" />
    <parameter name="prm.service.prepaybalance-management-service.baseUri" value="{{oc.service.prepaybalance-management-service.baseUri}}" />
    <!-- start APIGW -->
    <parameter name="oh.service.orderworkflow-domainrouter-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <!--rule-engine-service is deployed on the envs , but routing it through wiremock for the requirement of rule execution in proposal approval state , once rules are executed from c1 side , we can use real service-->
    <parameter name="catalog.service.rule-engine-repository-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hook.service.price-customization-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hook.service.customerbill-computeappliedcustomerbillingrate-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hook.service.tax-calculatetax-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hook.service.productconfigurator-hooks-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hook.service.promotion-qualification-hooks-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hook.service.pi-product-service-cust.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hook.service.shoppingcart-hooks-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hook.service.product-hooks-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hook.service.pod-search-hook.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="oc.service.asm-services-cloud-service.baseUri" value="{{oc.service.asm-services-cloud-service.baseUri}}" />
    <parameter name="oc.service.keycloak.baseUri" value="{{oc.service.keycloak.baseUri}}" />
    <parameter name="oc.service.product-offering-service.baseUri" value="{{oc.service.product-offering-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrdering/v2.1/productOrder/{productOrderId}/orderItem/{orderItemId}/updateState.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrdering/v2.1/productOrder/{productOrderId}/orderItem/updateState.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrdering/v2.1/productOrder/{productOrderId}/updateState.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.pi-factory-service.POST/productInventoryManagement/v2/product/applyProductFromOrder.baseUri" value="{{oc.service.pi-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.GET/productOrdering/v2.1/productOrder/inflightProductModification.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
 
    <parameter name="oc.service.logicaldate-service.baseUri" value="{{oc.service.logicaldate-service.baseUri}}" />
   
    <parameter name="oc.service.productorder-productorder-service.PATCH/productOrdering/v2.1/productOrder/{productOrderId}.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.rt-generic-element.baseUri" value="{{oc.service.rt-generic-element.baseUri}}" />
 <!--group4 internal APIs-->
    <parameter name="oc.service.productconfigurator-qualification-service.POST/productConfigurator/v1.0/evaluateQualificationRules.baseUri" value="{{oc.service.productconfigurator-qualification-service.baseUri}}" />
    <parameter name="oc.service.productconfigurator-commitmentterm-service.POST/productConfigurator/v1.0/calculateTerm.baseUri" value="{{oc.service.productconfigurator-commitmentterm-service.baseUri}}" />
    <parameter name="oc.service.productconfigurator-service.POST/productConfigurator/v1.0/productConfiguration/mergeConfiguration.baseUri" value="{{oc.service.productconfigurator-service.baseUri}}" />
    <parameter name="oc.service.productconfigurator-service.POST/productConfigurator/v1.0/productConfiguration/defaultEnablingProduct.baseUri" value="{{oc.service.productconfigurator-service.baseUri}}" />
    <parameter name="oc.service.productconfiguration-mergeentities-service.POST/productConfigurator/v1.0/productConfiguration/applySyncProductVersion.baseUri" value="{{oc.service.productconfiguration-mergeentities-service.baseUri}}" />
    <parameter name="oc.service.productconfigurator-action-service.POST/productConfigurator/v1.0/validateProductOfferingConfigurationAction/validate.baseUri" value="{{oc.service.productconfigurator-action-service.baseUri}}" />
    <parameter name="oc.service.productconfigurator-action-service.POST/productConfigurator/v1.0/productOfferingConfigurationStatus/retrieve.baseUri" value="{{oc.service.productconfigurator-action-service.baseUri}}" />
    <parameter name="oc.service.productconfigurator-utilities-service.POST/productConfigurator/v1.0/productConfiguration/mergeProductConfigurationChange.baseUri" value="{{oc.service.productconfigurator-utilities-service.baseUri}}" />

    <!-- TMF v4 start -->
    <parameter name="oc.service.pi-search-service.POST/productInventoryManagement/v4/productSearch/query.baseUri" value="{{oc.service.pi-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.pi-factory-service.POST/productInventoryManagement/v4/product/applyProductFromOrder.baseUri" value="{{oc.service.pi-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.orderitemaccessor-service.GET/applicationContext/v0/entityAccessor/submittedOrderItem.baseUri" value="{{oc.service.orderitemaccessor-service.baseUri}}" />
    <parameter name="oc.service.scheduler-task-service.baseUri" value="{{oc.service.scheduler-task-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.PATCH/productOrderingManagement/v4/productOrder/{productOrderId}.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrderingManagement/v4/productOrder/{productOrderId}/manageState.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrderingManagement/v4/productOrder/queryInflightModification.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrderingManagement/v4/productOrder/{productOrderId}/orderItem/{orderItemId}/updateState.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrderingManagement/v4/productOrder/{productOrderId}/orderItem/updateState.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrderingManagement/v4/productOrder/{productOrderId}/updateState.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrderingManagement/v4/productOrder/{productOrderId}/manageLock.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.GET/productOrderingManagement/v4/productOrder/inflightProductModification.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.PATCH/productOrderingManagement/v4/productOrder/{productOrderId}.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-deliverproductorder-service.POST/productOrderingManagement/v4/productOrder/validate/installationMethod.baseUri" value="{{oc.service.productorder-deliverproductorder-service.baseUri}}" />
    <parameter name="oc.service.productorder-deliverproductorder-service.POST/productOrderingManagement/v4/productOrder/validate/deliveryMethod.baseUri" value="{{oc.service.productorder-deliverproductorder-service.baseUri}}" />
    <parameter name="oc.service.productorder-manage-service.POST/productOrderingManagement/v4/productOrder/{productOrderId}/productOrderItem/manageProductOrderItemRelationship.baseUri" value="{{oc.service.productorder-manage-service.baseUri}}" />
    <parameter name="oc.service.productorder-manage-service.POST/productOrderingManagement/v4/productOrder/{productOrderId}/manageAgreement.baseUri" value="{{oc.service.productorder-manage-service.baseUri}}" />
    <parameter name="oc.service.productorder-modifyorder-service.POST/productOrderingManagement/v4/productOrder/draft.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrderingManagement/v4/productOrder/{productOrderId}/syncProductVersion.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.productorder-modifyorder-service.POST/productOrderingManagement/v4/productOrder/{productOrderId}/syncBackdatedProductVersion.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.logicaldate-service.baseUri" value="{{oc.service.logicaldate-service.baseUri}}" />
    <parameter name="oc.service.scheduler-task-service.baseUri" value="{{oc.service.scheduler-task-service.baseUri}}" />
    <parameter name="oc.service.productorder-productorder-service.POST/productOrderingManagement/v4/productOrder/aggregate.baseUri" value="{{oc.service.productorder-domainrouter-service.baseUri}}" />
    <parameter name="oc.service.pi-product-service.POST/productInventoryManagement/v4/product/updateStatus.baseUri" value="{{oc.service.pi-domainrouter-service.baseUri}}"/>
    <!--<parameter name="oc.service.proposal-agreement-service.POST/proposalAndAgreementManagement/v4/proposal/{proposalId}/manageStatus.baseUri" value="{{oc.service.pa-proposalandagreement-service.baseUri}}"/>
    <parameter name="oc.service.proposal-agreement-service.POST/proposalAndAgreementManagement/v4/agreement/{agreementId}/manageStatus.baseUri" value="{{oc.service.pa-proposalandagreement-service.baseUri}}"/>
  -->  <parameter name="oc.service.apidata-management-service.baseUri" value="{{oc.service.apidata-management-service.baseUri}}" /> <!--RestTool API-->
    <parameter name="oc.service.productconfigurator-price-service.POST/productConfigurator/v1.0/promotionQualification/qualifyPotentialPromotions.baseUri" value="{{oc.service.productconfigurator-price-service.baseUri}}" />
    <parameter name="oc.service.productconfigurator-qualification-service.POST/productConfigurator/v1.0/evaluateQualificationRules.baseUri" value="{{oc.service.productconfigurator-qualification-service.baseUri}}" />

    <parameter name="care.service.geographicsiteaccessor-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="care.service.geographicsite-geographicsite-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />
    <parameter name="hvo.service.highvolumeorder-highvolumeorder-service.baseUri" value="{{oc.service.oc-wiremock-service.baseUri}}" />

    <parameter name="oc.service.light-tracer-service.baseUri" value="{{oc.service.light-tracer-service.baseUri}}" />

    <parameter name="getOpenShiftServices.enabled" value="true" />
    <parameter name="getOpenShiftPods.enabled" value="true" />
    <parameter name="oc.service.kafka-service.baseUri" value="{{oc.service.kafka-service.externalHost.baseUri}}" />
    <parameter name="oc.kafka.service.ssl.enabled" value="true" />
    <parameter name="coreapi.rest.utils.restRequest.closeIdleConnectionsAfterEachResponseAfterSeconds" value="120" />
    <parameter name="jdk.tls.client.protocols" value="TLSv1.2" />

    <parameter name="oc.service.scheduler-task-service.task.schedule_future_order_items.crone" value="0 0/1 * * * ?" />
    <parameter name="oc.service.scheduler-task-service.task.limited_duration_remove_expired_promotions.crone" value="0 0/1 * * * ?" />

    <!-- Controlling the wait time for sync retry -->
    <parameter name="oc.waitUtils.kakfaSync.maxTimeout.ms" value="120000" />
    <parameter name="oc.waitUtils.kakfaSync.sleepTime.ms" value="3000" />

    <!-- JIRA Integration tool -->
    <parameter name="jira.sync" value="false" />
    <parameter name="jira.checkuser" value="false" />
    <parameter name="jira.authorization" value="Basic dXNlcm5hbWU6cGFzc3dvcmQ=" />
    <parameter name="jira.upload.report" value="false" />
    <parameter name="jira.update.status" value="false" />

    <parameter name="coreapi.rest.utils.RestDriver.RestRequest.header.X-API-LOGGER-FIELDS.isEnabled" value="true" />

    <listeners>
        <listener class-name="com.amdocs.corereport.listener.testng.custom.v5.TestNGCustomReporterListener" />
        <listener class-name="com.amdocs.core.oc.test.listeners.DigitalListener" />
        <listener class-name="com.amdocs.corereport.jira.listener.JIRAIntegrationListener" />
    </listeners>

    <test name="Automation Setup">
        <classes>
            <class name="com.amdocs.core.oc.test.automationSetup.OrderCaptureAutomationSetup" />
        </classes>
    </test>

    [TESTS HERE]

</suite>
